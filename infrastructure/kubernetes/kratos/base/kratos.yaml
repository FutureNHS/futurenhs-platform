# This file is generated by running `helm template -f ~/tmp/values.yaml ory/kratos --namespace kratos`
# and then ripping it apart

# Source: kratos/templates/service-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: kratos-admin
  namespace: kratos
  labels:
    app.kubernetes.io/name: kratos
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http-admin
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kratos
---
# Source: kratos/templates/service-public.yaml
apiVersion: v1
kind: Service
metadata:
  name: kratos-public
  namespace: kratos
  labels:
    app.kubernetes.io/name: kratos
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http-public
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: kratos
---
# Source: kratos/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kratos
  namespace: kratos
  labels:
    app.kubernetes.io/name: kratos
  annotations:
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: kratos
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kratos
      annotations:
    spec:
      initContainers:
        - name: kratos-automigrate
          image: "oryd/kratos:v0.4.6"
          imagePullPolicy: IfNotPresent
          command: ["kratos"]
          args:
            [
              "migrate",
              "sql",
              "-e",
              "--yes",
              "--config",
              "/etc/config/config.yaml",
            ]
          volumeMounts:
            - name: kratos-config-volume
              mountPath: /etc/config
              readOnly: true
          env:
            - name: DSN
              valueFrom:
                secretKeyRef:
                  name: kratos
                  key: dsn
            - name: SECRETS_DEFAULT
              valueFrom:
                secretKeyRef:
                  name: kratos
                  key: secretsDefault
            - name: SECRETS_COOKIE
              valueFrom:
                secretKeyRef:
                  name: kratos
                  key: secretsCookie
      volumes:
        - name: kratos-config-volume
          configMap:
            name: kratos-config
      containers:
        - name: kratos
          image: "oryd/kratos:v0.4.6"
          imagePullPolicy: IfNotPresent
          command: ["kratos"]
          args: [
              "serve",
              "all",
              # FIXME remove the --dev flag somehow. Might be possible to make the localhost dev server be secure + self-signed?
              # https://www.ory.sh/kratos/docs/debug/csrf/#ory-kratos-running-over-http-without-dev-mode-enabled
              "--dev",
              "--config",
              "/etc/config/config.yaml",
            ]
          volumeMounts:
            - name: kratos-config-volume
              mountPath: /etc/config
              readOnly: true
          env:
            - name: DSN
              valueFrom:
                secretKeyRef:
                  name: kratos
                  key: dsn
            - name: SECRETS_DEFAULT
              valueFrom:
                secretKeyRef:
                  name: kratos
                  key: secretsDefault
            - name: SECRETS_COOKIE
              valueFrom:
                secretKeyRef:
                  name: kratos
                  key: secretsCookie
          ports:
            - name: http-admin
              containerPort: 4434
              protocol: TCP
            - name: http-public
              containerPort: 4433
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/alive
              port: http-admin
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http-admin
          resources: null
